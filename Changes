
0.66

    o Added POD for DBD::mSQL's quirks and non-standard methods. Use:

            perldoc DBD::mSQL

      to read it. Reading it is a good idea.

    o Applied Gary Shea's patches:

        o LENGTH is not tested in the mSQLFetchField test ( test.pl )
        o Zero-length CHAR fields were being incorrectly returned as NULL
          ( dbdimp.c )

    o Optional %attr hash in DBI->connect() typo. "dbname" should have read
      "database". Please note, this method of connecting is *NON-PORTABLE*.
      Also, this problem was only in the 'Changes' file. The actual module
      code has always been correct. *sigh*

0.65

    o Fixed broken connect() error status problems. If the connection
      failed, it wouldn't flag the error correctly.
    o Added $sth->{NAME} handling. This is a temporary solution being
      worked on in conjunction with the general DBI metadata issue.
    o Added support for optional %attr hash in DBI->connect() method.
      The additional parameters of interest to DBD::mSQL are:

        %connectHash = ( 
            "hostname"  => 'localhost',
            "database"  => 'dbname',
            "port"      => '1112'
          );

      And can be used as:

        $dbh = DBI->connect( '', '', '', 'mSQL', \%connectHash );

      The hash contents will override the supplied standard arguments.
    o Added ANSI -> mSQL and mSQL -> ANSI datatype mapping hashes, which 
      will be used as the DBI metadata issues become resolved.

0.64

    o Fixed return values from $sth->execute. It now correctly returns
      -1 since mSQL doesn't appear to like row counting on non-SELECT
      statements
    o Added $sth->rows() method
    o Added $sth->quote() method for correctly quoting strings under mSQL
    o Patched Makefile.PL with warnings for HP-SUX
    o Added feature that row counts can be got at with the return value of
      $sth->execute call on SELECT statements. This is an mSQL peculiarity
    o $sth->prepare() correctly returns undef on failure now
    o Added some additional help in test.pl, which now makes it even more
      incompatible with the standard t/* test harness! ( Sorry Andreas! )
    o Added a warning to test.pl, which makes user interaction a requirement
      unless you configure the test. This stops the test automatically 
      scanning your mSQL server to find a database to test in, if you don't
      have an obvious test database for it to use.
    o _NumRows private method is now flagged for deprecation ( it doesn't
      spit out warnings ). Please stop using it and start using $sth->rows()
      instead.

0.63

    o Patched broken test.pl

0.62

    o Patched bug that makes NULL be returned as undef

0.61
	o Added code to plug some memory leaks
	o Added experimental Msqlperl emulation
	o Brought .xs and mSQL interface code in line with DBD::Oracle
	o Fixed 'connect' call arguments
	o Removed a lot of dead code
	o Added some other methods for mSQL/Msqlperl emulation and flexibility
	o Added mSQL version 2 support
	o Made the Makefile.PL a bit more auto-configurey, in that it should
	  try and detect what version of mSQL you have installed and are attempting
	  to build against

0.60pl10

	o Altered mSQL.xs::st::DESTROY to stop blabbering about sth's
          "destroyed without finish". Blame Doug MacEachern for this one....

	o Altered mSQL.xs to put msqlFreeResult in the correct place in each
	  of the 'func' calls. It was getting called even if the routine to
          populate the struct to be freed failed..........Which resulted in
          a core. Thanks to Robert C. Hinds for producing a detailed error 
	  log for me to fix.

0.60pl9

	o Added 'length' key into the hash returned by func( '_ListFields' )

	o Altered mSQL.pm to allow hostname:port style connection strings. This
	  directly sets MSQL_TCP_PORT. If port isn't specified it unsets
	  MSQL_TCP_PORT and you're in the lap of the gods.......

0.60pl8

	o Added error string and number to 'func' methods

	o Completed implementation of 'ListFields' invoked through the
	  'func' method

	o Added implementation of 'CreateDB' and 'DropDB' through the
	  'func' method

	o Added a method 'NumRows' against $sth to show the number of
	  rows returned by a statement.

0.60pl7

	o Fixed $DBI::errnum/$DBI::errstr problems, ie, it wasn't being 
	  returned back into the invoking program.

	  ( Thanks to Sven Verdoolaege for the patches )

	o Fixed DROP, DELETE &c blah. Missing '= 1' variable set.

	  ( Thanks again to SV )

	o Added ListDBs and ListTables to the driver via the
	  'func' method. ListFields is still under implementation. ( By the
	  next full version )

	o Rewrote the test script to execise the whole driver. ( Should keep
	  Andreas happy! 8-) ). The test still needs to exercise multiple
	  simultaneous database connections and cursors, but we'll wworry about
	  that in the next release.

	o Tidied up stray declarations in the includes, so we have warning-free
	  compiles ( hopefully! )

	o Tidied up Makefile.PL to remove all the Oracle-isms from the code.

	o Fixed \$sth->readblob method to return undef.

	o Removed old Msqlperl tests to stop confusing people......
